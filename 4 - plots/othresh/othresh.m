% OTHRESH.M  Orientation discrimination contrast threshold experimentclear;clc;% subject codesubject='jfk';% stimulus characteristicsbglumC = 35;              % background luminancelambdaP = 8;              % grating wavelengththetaR = pi/32;           % grating orientation from verticalsigmaP = 7;               % gabor space constantframesizeP = 10*lambdaP;  % stimulus size% make unit-contrast gratingsleftgabor = gabor2d(lambdaP,thetaR,0,sigmaP,framesizeP);leftgabor = leftgabor/max(leftgabor(:));rightgabor = gabor2d(lambdaP,-thetaR,0,sigmaP,framesizeP);rightgabor = rightgabor/max(rightgabor(:));% make blank stimulusblank = repmat(bglumC,framesizeP,framesizeP);% make auditory feedback signalshighbeep = sin(2*pi*(1:2048)/20);lowbeep = sin(2*pi*(1:2048)/40);% open stimulus windowfigure(1);colormap('gray');% open data file and write headerfname=[ 'ot_' subject '.txt' ];fid=fopen(fname,'a');if fid==-1	error('Unable to open data file.');endfprintf(fid,'%% OT  Orientation discrimination threshold experiment\n');fprintf(fid,'%% SUBJECT=''%s'';\n',subject);fprintf(fid,'%% TIME=''%s'';\n',datestr(now));fprintf(fid,'%% BGLUMC=%f; LAMBDAP=%d; THETAR=%f; FRAMESIZEP=%d;\n',bglumC,lambdaP,framesizeP,thetaR);fprintf(fid,'%% TRIAL=1; RIGHT=2; CONTRAST=3; CORRECT=4;\n');% trialsfor t = 1:100		% pick a contrast level	cst = ceil(10*rand)/10;		% choose orientation	right = (rand<0.5);	if right==1		stim = rightgabor;	else		stim = leftgabor;	end		% create stimulus	grating = bglumC*( 1 + cst*stim );		% show stimulus	image(grating);	drawnow;	pause(1);	image(blank);	drawnow;		% get response	while 1				key = input('response (1=left, 2=right, 0=quit):  ');				if key == 1			response = 0;			break		elseif key == 2			response = 1;			break        elseif key == 0            response = NaN;            break		end			end	if isnan(response)		break	end		% decide whether response was correct	if ( (right==0) && (response==0) ) || ( (right==1) && (response==1) )		correct = 1;	else		correct = 0;	end		% give auditory feedback	if correct		sound(highbeep);	else		sound(lowbeep);	end		% save trial data	fprintf(fid,'%d\t%d\t%.3f\t%d\n',t,right,cst,correct);		% pause between trials	pause(1);	end% close data filefprintf(fid,'%% end of session\n\n');fclose(fid);